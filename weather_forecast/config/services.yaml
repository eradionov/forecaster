# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    api.musement.url: 'https://api.musement.com/api/v3'
    api.weatherapi.url: 'http://api.weatherapi.com/v1'
    api.weatherapi.key: '%env(WEATHER_API_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Infrastructure\Command\WeatherForecast:
        tags:
            - { name: 'console.command', command: 'app:weather_forecast' }

    App\Application\Serializer\MusementApiSerializer:
        factory: ['@App\Factory\MusementApiSerializerFactory', 'build']

    App\Application\Fetcher\MusementCityApiFetcher: ~
    App\Application\Fetcher\MusementCityForecastApiFetcher: ~

    App\Application\WeatherForecastDetector:
        arguments:
            $notifier: '@logger'

    Symfony\Component\Serializer\SerializerInterface: '@App\Application\Serializer\MusementApiSerializer'

    App\Application\Fetcher\ApiRequestFetcherInterface $musementCityApiFetcher: '@App\Application\Fetcher\MusementCityApiFetcher'
    App\Application\Fetcher\ApiRequestFetcherInterface $musementCityForecastApiFetcher: '@App\Application\Fetcher\MusementCityForecastApiFetcher'

    App\Application\Renderer\ConsoleWeatherForecastRenderer:
        class: App\Application\Renderer\ConsoleWeatherForecastRenderer
        arguments:
            $logger: '@logger'